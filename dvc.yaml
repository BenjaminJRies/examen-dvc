stages:
  import_raw_data:
    cmd: python src/data/import_raw_data.py
    deps:
    - src/data/import_raw_data.py
    outs:
    - data/raw_data/raw.csv
  split_data:
    cmd: python src/data/split_data.py
    deps:
    - data/raw_data/raw.csv
    - src/data/split_data.py
    outs:
    - data/processed/X_test.csv
    - data/processed/X_train.csv
    - data/processed/y_test.csv
    - data/processed/y_train.csv
  normalize_data:
    cmd: python src/data/normalize_data.py
    deps:
    - data/processed/X_test.csv
    - data/processed/X_train.csv
    - src/data/normalize_data.py
    outs:
    - data/processed/X_test_scaled.csv
    - data/processed/X_train_scaled.csv
  gridsearch_best_params:
    cmd: python src/models/gridsearch_best_params.py
    deps:
    - data/processed/X_train_scaled.csv
    - data/processed/y_train.csv
    - src/models/gridsearch_best_params.py
    outs:
    - models/best_params.pkl
  train_model:
    cmd: python src/models/train_model.py
    deps:
    - data/processed/X_train_scaled.csv
    - data/processed/y_train.csv
    - models/best_params.pkl
    - src/models/train_model.py
    outs:
    - models/trained_model.joblib
  evaluate_model:
    cmd: python src/models/evaluate_model.py
    deps:
    - data/processed/X_test_scaled.csv
    - data/processed/y_test.csv
    - models/trained_model.joblib
    - src/models/evaluate_model.py
    outs:
    - data/predictions.csv
    - metrics/scores.json
